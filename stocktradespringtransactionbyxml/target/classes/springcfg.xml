<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns = "http://www.springframework.org/schema/beans"
   xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
   xmlns:aop = "http://www.springframework.org/schema/aop"
   xmlns:context = "http://www.springframework.org/schema/context"
   xmlns:tx = "http://www.springframework.org/schema/tx"
   xsi:schemaLocation = "http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx.xsd">
   
 <context:property-placeholder location="db.properties, dbtype.properties"/>
 
 <aop:config>
 	<aop:pointcut expression="execution(* com.reactiveworks.stocktrade.dao.impl.StockTradeDAOSQLImpl.*(..))"
 					 id="batchOperationPointcut"/>
 	<aop:advisor advice-ref="txBatchOperationAdvice" pointcut-ref="batchOperationPointcut"/>
 </aop:config>
 
 <tx:advice id="txBatchOperationAdvice" transaction-manager="transactionManagerBean">
 	<tx:attributes>
 		<tx:method name="insertStockTrade" read-only="false" rollback-for="java.lang.Exception"/>
 		<tx:method name="getStockTradeById" read-only="true" rollback-for="java.lang.Exception"/>
 		<tx:method name="updateStockTradeSecurity" read-only="false" rollback-for="java.lang.Exception"/>
 		<tx:method name="deleteStockTradeById" read-only="false" rollback-for="java.lang.Exception"/>
 		<tx:method name="getAllStockTrades" read-only="true" rollback-for="java.lang.Exception"/>
 		<tx:method name="performBatchInsertStockTrade" read-only="false" rollback-for="java.lang.Exception"/> 
 	</tx:attributes>
 </tx:advice>
 
<bean id="transactionManagerBean" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg name="dataSource" ref="apacheDataSource"></constructor-arg>
</bean>

<bean id="apacheDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	<property name="url" value="${db.url}" />
	<property name="username" value="${db.username}" />
	<property name="password" value="${db.password}" />
	<property name="minIdle" value="${db.minIdle}" />
</bean>

<bean id="jdbc" class="org.springframework.jdbc.core.JdbcTemplate">
	<constructor-arg name="dataSource" ref="apacheDataSource" />
</bean>

<bean id="dbtype" class="com.reactiveworks.stocktrade.dao.StockTradeDAOFactory">
	<property name="dbType" value="${db.type}" />
</bean>

<bean id="daoSql" class="com.reactiveworks.stocktrade.dao.StockTradeDAOFactory">
	<property name="jdbcTemplate" ref="jdbc" />
</bean>

<bean id="daoInstance" class="com.reactiveworks.stocktrade.dao.StockTradeDAOFactory"
	factory-method="getStockTradeDAOInstance">	
</bean>

<bean id="service" class="com.reactiveworks.stocktrade.service.impl.StockTradeServiceImpl"></bean>
</beans>
